{"version":3,"sources":["components/Feedback/Feedback.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","styles","btn","type","name","onClick","shortid","generate","Section","title","children","Statistic","good","neutral","bad","total","positiveFeedback","Notification","message","notification","App","useState","setGood","setNeutral","setBad","handlerTotal","Math","round","wrapper","e","target","prevGood","prevNeutral","prevBad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,uBAAuB,aAAe,+BAA+B,IAAM,sBAAsB,KAAO,uBAAuB,QAAU,0BAA0B,IAAM,wB,yIC0BvNC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,UAAWC,IAAOC,IAElBC,KAAK,SACLC,KAAML,EACNM,QAASR,EALX,SAOGE,GALIO,IAAQC,kBCMRC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIV,UAAWC,IAAOG,KAAtB,SAA6BK,IAC5BC,MCaQC,EAlBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,iBAA9B,OAChB,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,uCAAUC,KACV,oDAAuBC,EAAvB,WCGWC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,qBAAKlB,UAAWC,IAAOkB,aAAvB,SAAsCD,KCGhC,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAkBMC,EAAe,WACnB,OAAOb,EAAOC,EAAUC,GAEpBE,EAAmB,WACvB,IAAMD,EAAQU,IACd,OAAOC,KAAKC,MAAc,IAAPf,EAAcG,IAGnC,OACE,sBAAKf,UAAWC,IAAO2B,QAAvB,UACE,cAAC,EAAD,CAASnB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEb,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA7BgB,SAAAgC,GAEtB,OADaA,EAAEC,OAAO1B,MAEpB,IAAK,OACHkB,GAAQ,SAAAS,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHR,GAAW,SAAAS,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHR,GAAO,SAAAS,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,aAoBDjB,IACC,cAAC,EAAD,CAASP,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,iBAAkBA,QAItB,cAAC,EAAD,CAAcE,QAAQ,yBCpD9BgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6e4b7e22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Feedback_wrapper__2GEXt\",\"name\":\"Feedback_name__3dqp0\",\"notification\":\"Feedback_notification__3GAL3\",\"btn\":\"Feedback_btn__2l22B\",\"good\":\"Feedback_good__3ddyw\",\"neutral\":\"Feedback_neutral__1M_3N\",\"bad\":\"Feedback_bad__2sWDd\"};","import React from 'react';\nimport shortid from 'shortid';\nimport styles from '../Feedback/Feedback.module.css';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map(option => (\n        <button\n          className={styles.btn}\n          key={shortid.generate()}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from 'react';\nimport styles from '../Feedback/Feedback.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2 className={styles.name}>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistic = ({ good, neutral, bad, total, positiveFeedback }) => (\n  <div>\n    <p>Good: {good}</p>\n    <p>Neutral: {neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total:{total}</p>\n    <p>Positive feedback: {positiveFeedback}%</p>\n  </div>\n);\n\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedback: PropTypes.number.isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../Feedback/Feedback.module.css';\n\nconst Notification = ({ message }) => {\n  return <div className={styles.notification}>{message}</div>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport './App.css';\nimport styles from './components/Feedback/Feedback.module.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = e => {\n    const name = e.target.name;\n    switch (name) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const handlerTotal = () => {\n    return good + neutral + bad;\n  };\n  const positiveFeedback = () => {\n    const total = handlerTotal();\n    return Math.round((good * 100) / total);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n\n      {positiveFeedback() ? (\n        <Section title=\"Statistics\">\n          <Statics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={handlerTotal()}\n            positiveFeedback={positiveFeedback()}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}